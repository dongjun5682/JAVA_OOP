2018-12-17
declaring-
defining
creating-


컴퓨터 과학에서
객체 또는 오브젝트(object)는
1.저장공안에서 할당되어 값을 가진다 && 식별자에 의해 참조되는 공간
2.배열에서 요소가 객체가 아닌 이유는 식별자에 의해서 참조되지않고 인덱스에 의해서 참조되기떄문에


변수, 자료 구조, 함수 또는 메소드는 객체가 될 수 있다


변수를 이용해 (클래스)객체에 접근 => 리얼월드 객체 = 디스크에 있는 객체에 접근 

  
 메모리가 할당되기 전까지 (가상)객체는 존재하지 않는다.
 
 클래스 객체는 자료와 그 자료를 다루는 명령의 조합을 포함하여 
 객체가 메시지를 받고 자료를 처리하며 메시지를 다른 객체로 보낼 수 있도록 한다. 
 실세계의 유추로 설명하자면 만약 어떤 사람이 집에서 살기를 원할 때,
 그 집의 청사진(집의 사진)이나 축소 모형 따위는 전혀 필요가 없다. 
 필요한 것은 설계에 맞는 실제 집이다. 
 이 유추에서 청사진은 클래스를 나타내고 실제 집은 객체를 나타낸다
 
 class = fields + methods(area) + constructors
 
  real-world objects == class
 Scanner s = new scanner();

 new scanner() -> 메모리에 할당
 한번쓰고 버린다 <- 인스턴스(소프트웨어) => 메모리 위에 있는 객체
 
 객체지향프로그래밍(OOP) : 상속, 캡슐화(은닉화), 추상화, 다형성
 
 멤버 변수는 초기화 X
 로컬변수는 초기화 필수 하지않으면 원하지않은 값이 들어가기떄문에
 
 메소드 선언구조
 public String test(String a){}
 public -> 접근제한
 String ->리턴타입
 test ->ID
 (String a) ->파라미터
 {} -> 에어리어
 
// 리턴타입
결과가 없으면 void
결과가 있으면 String,int....,member

리턴이 없는 경우와 있는 경우
리턴타입이 void 인 경우와 아닌 경우
